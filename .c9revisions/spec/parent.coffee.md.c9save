{"ts":1380470563286,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1380470842579,"patch":[[{"diffs":[[1,"methods\n=======\nDefinitions\n-----------\n\n    should      = require 'should'\n    nailCore    = require 'nail-core'\n    parent     = require('../coverage/instrument/lib/module.js').parent\n    _           = require 'underscore'\n    they        = it #more natural language for describing array properties\n\nDescription\n-----------\n\n    describe 'methods', ->\n      it 'is an Object', ->\n        (_.isObject methods).should.be.ok\n\nThe \"aspect\" properties defines which section of the class definition the module handles.\n\n      it 'has a \"aspect\" string\"', ->\n        methods.aspect.should.be.a 'string'\n      \n      it 'its aspect is \"methods\"', ->\n        methods.aspect.should.equal 'methods'\n        \nThis aspect is optional.      \n      \n      it 'does not crash if the class has no methods', ->\n        Person = ->\n        Person.definition = {}\n        methods.augment Person\n\nThe augment function exists...\n\n      it 'has a \"augment\" function', ->\n        (_.isFunction methods.augment).should.be.ok\n\n...and adds methods to the prototype.\n\n      it 'adds a method to a class prototype', ->\n        Person = ->\n        Person.definition =\n          methods:\n            hello: -> 'hello world'\n            \n        methods.augment Person\n        x = new Person\n        x.hello().should.equal 'hello world'\n\nThe module can be used as a nail module.\n\n      it 'can be used as a nail module', ->\n        nail = nailCore.use methods\n        lib = nail.to Person:\n          methods:\n            hello: -> 'hello world'\n          \n        x = new lib.Person\n        x.hello().should.equal 'hello world'\n"]],"start1":0,"start2":0,"length1":0,"length2":1598}]],"length":1598,"saved":false}
{"ts":1380470890419,"patch":[[{"diffs":[[0,"scribe '"],[-1,"methods"],[1,"parent"],[0,"', ->\n  "]],"start1":333,"start2":333,"length1":23,"length2":22},{"diffs":[[0,"sObject "],[-1,"methods"],[1,"parent"],[0,").should"]],"start1":393,"start2":393,"length1":23,"length2":22},{"diffs":[[0,"g\"', ->\n        "],[-1,"methods"],[1,"parent"],[0,".aspect.should.b"]],"start1":544,"start2":544,"length1":39,"length2":38},{"diffs":[[0,"ect is \""],[-1,"methods"],[1,"parent"],[0,"\"', ->\n "]],"start1":619,"start2":619,"length1":23,"length2":22},{"diffs":[[0,"        "],[-1,"methods"],[1,"parent"],[0,".aspect."]],"start1":640,"start2":640,"length1":23,"length2":22},{"diffs":[[0,".equal '"],[-1,"methods"],[1,"parent"],[0,"'\n      "]],"start1":668,"start2":668,"length1":23,"length2":22}]],"length":1592,"saved":false}
{"ts":1380470901685,"patch":[[{"diffs":[[0," has no "],[-1,"methods"],[1,"parent"],[0,"', ->\n  "]],"start1":768,"start2":768,"length1":23,"length2":22}]],"length":1591,"saved":false}
{"ts":1380470913240,"patch":[[{"diffs":[[0,"on = {}\n        "],[-1,"methods"],[1,"parent"],[0,".augment Person\n"]],"start1":831,"start2":831,"length1":39,"length2":38}]],"length":1590,"saved":false}
{"ts":1380470948306,"patch":[[{"diffs":[[0,"unction "],[-1,"methods"],[1,"parent"],[0,".augment"]],"start1":956,"start2":956,"length1":23,"length2":22}]],"length":1589,"saved":false}
{"ts":1380471240027,"patch":[[{"diffs":[[0,"and "],[-1,"adds methods to the"],[1,"creates a"],[0," pro"]],"start1":997,"start2":997,"length1":27,"length2":17},{"diffs":[[0,"rototype"],[1," chain"],[0,".\n\n     "]],"start1":1012,"start2":1012,"length1":16,"length2":22},{"diffs":[[0,"it '"],[-1,"adds a method to a class"],[1,"creates a"],[0," pro"]],"start1":1035,"start2":1035,"length1":32,"length2":17},{"diffs":[[0,"rototype"],[1," chain"],[0,"', ->\n  "]],"start1":1050,"start2":1050,"length1":16,"length2":22},{"diffs":[[0,"nition ="],[1," {}"],[0,"\n       "]],"start1":1109,"start2":1109,"length1":16,"length2":19},{"diffs":[[0,"    "],[-1,"  methods:\n            hello: -> 'hello world'\n        "],[1,"\n        User.definition ="],[0,"    "]],"start1":1125,"start2":1125,"length1":63,"length2":34}]],"length":1550,"saved":false}
{"ts":1380471460210,"patch":[[{"diffs":[[0,"on ="],[1,"\n"],[0,"    "],[-1,"\n        methods"],[1,"      parent: Person\n        \n        parent"],[0,".aug"]],"start1":1151,"start2":1151,"length1":28,"length2":57},{"diffs":[[0,"augment "],[-1,"Person"],[1,"User"],[0,"\n       "]],"start1":1205,"start2":1205,"length1":22,"length2":20},{"diffs":[[0,"    "],[-1,"x = new Person"],[1,"\n        "],[0,"\n   "]],"start1":1222,"start2":1222,"length1":22,"length2":17}]],"length":1572,"saved":false}
{"ts":1380471562911,"patch":[[{"diffs":[[0,"chain.\n\n"],[1,"The parent can be an constructor.\n\n"],[0,"      it"]],"start1":1021,"start2":1021,"length1":16,"length2":51},{"diffs":[[0,"        "],[-1,"\n        x.hello()"],[1,"User.prototype"],[0,".should."]],"start1":1262,"start2":1262,"length1":34,"length2":30},{"diffs":[[0,"d.equal "],[-1,"'hello world'"],[1,"Person"],[0,"\n\nThe mo"]],"start1":1290,"start2":1290,"length1":29,"length2":22}]],"length":1596,"saved":false}
{"ts":1380471812046,"patch":[[{"diffs":[[0,"\n\n      "],[-1,"it"],[1,"describe"],[0," 'create"]],"start1":1062,"start2":1062,"length1":18,"length2":24},{"diffs":[[0," chain', ->\n"],[1,"        it 'with a constructor', ->\n  "],[0,"        Pers"]],"start1":1099,"start2":1099,"length1":24,"length2":62},{"diffs":[[0,"    Person = ->\n"],[1,"  "],[0,"        Person.d"]],"start1":1153,"start2":1153,"length1":32,"length2":34},{"diffs":[[0,"on = {}\n        "],[-1,"\n"],[1,"  \n  "],[0,"        User.def"]],"start1":1194,"start2":1194,"length1":33,"length2":37},{"diffs":[[0,"=\n          "],[1,"  "],[0,"parent: Pers"]],"start1":1239,"start2":1239,"length1":24,"length2":26},{"diffs":[[0," Person\n        "],[1,"  "],[0,"\n        parent."]],"start1":1260,"start2":1260,"length1":32,"length2":34},{"diffs":[[0,"       \n        "],[1,"  "],[0,"parent.augment U"]],"start1":1271,"start2":1271,"length1":32,"length2":34},{"diffs":[[0,"nt User\n        "],[-1,"\n"],[1,"  \n  "],[0,"        User.pro"]],"start1":1301,"start2":1301,"length1":33,"length2":37},{"diffs":[[0,"ual Person\n\n"],[1,"Or a string. The string must be an fully qualified class name.\n\n\n"],[0,"The module c"]],"start1":1354,"start2":1354,"length1":24,"length2":89}]],"length":1721,"saved":false}
{"ts":1380471833288,"patch":[[{"diffs":[[0,"n.\n\n"],[-1,"The parent can be an constructor.\n\n"],[0,"    "]],"start1":1025,"start2":1025,"length1":43,"length2":8},{"diffs":[[0," chain', ->\n"],[1,"      \nThe parent can be an constructor.\n\n"],[0,"        it '"]],"start1":1064,"start2":1064,"length1":24,"length2":66}]],"length":1728,"saved":false}
{"ts":1380471893345,"patch":[[{"diffs":[[0," name.\n\n"],[1,"        it 'with a constructor', ->\n          nailCore.lib.Person = ->\n          Person.definition = {}\n          \n          User.definition =\n            parent: Person\n          \n          parent.augment User\n          \n          User.prototype.should.equal Person\n"],[0,"\nThe mod"]],"start1":1429,"start2":1429,"length1":16,"length2":283}]],"length":1995,"saved":false}
{"ts":1380472358062,"patch":[[{"diffs":[[0," ->\n"],[-1,"          Person.definition = {}\n"],[0,"    "]],"start1":1172,"start2":1172,"length1":41,"length2":8},{"diffs":[[0,".lib"],[1,"['nail-common"],[0,".Person"],[1,"']"],[0," = ->\n"],[-1,"          Person.definition = {}\n"],[0,"    "]],"start1":1458,"start2":1458,"length1":54,"length2":36}]],"length":1944,"saved":false}
{"ts":1380472452141,"patch":[[{"diffs":[[0,"        parent: "],[1,"'nail-common."],[0,"Person"],[1,"'"],[0,"\n          \n    "]],"start1":1533,"start2":1533,"length1":38,"length2":52},{"diffs":[[0,"d.equal "],[-1,"Person"],[1,"nailCore.lib['nail-common.Person']\n          delete nailCore.lib['nail-common.Person']"],[0,"\n\nThe mo"]],"start1":1652,"start2":1652,"length1":22,"length2":102}]],"length":2038,"saved":false}
{"ts":1380473112753,"patch":[[{"diffs":[[0," it 'with a "],[-1,"constructor"],[1,"string"],[0,"', ->\n      "]],"start1":1411,"start2":1411,"length1":35,"length2":30}]],"length":2033,"saved":false}
{"ts":1380484643368,"patch":[[{"diffs":[[0,"structor"],[1," function. \nThe function willbecalled without parameters tocreate the\nprototype `new constructor()`"],[0,".\n\n     "]],"start1":1107,"start2":1107,"length1":16,"length2":115},{"diffs":[[0,"Person\n\n"],[1,"The parent can be an object. The object is used as the classes prototype.\n\n\n"],[0,"Or a str"]],"start1":1431,"start2":1431,"length1":16,"length2":92}]],"length":2208,"saved":false}
{"ts":1380484723661,"patch":[[{"diffs":[[0,"ion will"],[1," "],[0,"be"],[1," "],[0,"called w"]],"start1":1136,"start2":1136,"length1":18,"length2":20},{"diffs":[[0,"ters"],[1," (`new constructor()`)"],[0," to"],[1," "],[0,"create "],[1,"\n"],[0,"the"],[-1,"\n"],[1," "],[0,"prot"]],"start1":1169,"start2":1169,"length1":22,"length2":46},{"diffs":[[0,"type"],[-1," `new constructor()`"],[0,".\n\n "]],"start1":1216,"start2":1216,"length1":28,"length2":8}]],"length":2214,"saved":false}
{"ts":1380484794667,"patch":[[{"diffs":[[0,"otype.\n\n"],[1,"      it 'with a object', ->\n          Person = ->\n          \n          User.definition =\n            parent: Person\n          \n          parent.augment User\n          \n          User.prototype.should.equal Person\n\n"],[0,"\nOr a st"]],"start1":1512,"start2":1512,"length1":16,"length2":231}]],"length":2429,"saved":false}
{"ts":1380484835029,"patch":[[{"diffs":[[0,"         parent:"],[1," new"],[0," Person"],[1,"()"],[0,"\n          \n    "]],"start1":1613,"start2":1613,"length1":39,"length2":45}]],"length":2435,"saved":false}
{"ts":1380484917885,"patch":[[{"diffs":[[0,"ype.\n\n      "],[1,"  "],[0,"it 'with a o"]],"start1":1514,"start2":1514,"length1":24,"length2":26}]],"length":2437,"saved":false}
{"ts":1380485028333,"patch":[[{"diffs":[[0," \n          User"],[-1,"."],[1,"::"],[0,"prototype.should"]],"start1":1397,"start2":1397,"length1":33,"length2":34},{"diffs":[[0," \n          User"],[-1,"."],[1,"::"],[0,"prototype.should"]],"start1":1696,"start2":1696,"length1":33,"length2":34},{"diffs":[[0,"    User"],[-1,"."],[1,"::"],[0,"prototyp"]],"start1":2029,"start2":2029,"length1":17,"length2":18},{"diffs":[[0,"ore.use "],[-1,"methods"],[1,"parent"],[0,"\n       "]],"start1":2256,"start2":2256,"length1":23,"length2":22}]],"length":2439,"saved":false}
{"ts":1380485418356,"patch":[[{"diffs":[[0,"ore'"],[-1,"\n    they        = it #more natural language for describing array properties"],[0,"\n\nDe"]],"start1":220,"start2":220,"length1":84,"length2":8}]],"length":2363,"saved":false}
{"ts":1380485593840,"patch":[[{"diffs":[[0,"    "],[-1,"lib = nail.to Person:\n          methods:\n            hello: -> 'hello world'"],[1,"parent = ->\n        \n        lib = nail.to User:\n          parent: parent"],[0,"\n   "]],"start1":2199,"start2":2199,"length1":84,"length2":81},{"diffs":[[0,"new lib."],[-1,"Person"],[1,"User"],[0,"\n       "]],"start1":2300,"start2":2300,"length1":22,"length2":20},{"diffs":[[0,"    "],[-1,"x.hello().should.equal 'hello world'"],[1,"(x instanceof parent).should.be.ok()"],[0,"\n"]],"start1":2317,"start2":2317,"length1":41,"length2":41}]],"length":2358,"saved":false}
{"ts":1380485736499,"patch":[[{"diffs":[[0,"\n\n      "],[-1,"it"],[1,"descibe"],[0," 'can be"]],"start1":2114,"start2":2114,"length1":18,"length2":23}]],"length":2363,"saved":false}
{"ts":1380485740744,"patch":[[{"diffs":[[0,"    desc"],[1,"r"],[0,"ibe 'can"]],"start1":2118,"start2":2118,"length1":16,"length2":17}]],"length":2364,"saved":false}
{"ts":1380485778164,"patch":[[{"diffs":[[0,"ould.be."],[-1,"ok"],[1,"true"],[0,"()\n"]],"start1":2351,"start2":2351,"length1":13,"length2":15}]],"length":2366,"saved":false}
{"ts":1380485839429,"patch":[[{"diffs":[[0,".be."],[-1,"true()"],[1,"ok"],[0,"\n"]],"start1":2355,"start2":2355,"length1":11,"length2":7}]],"length":2362,"saved":false}
{"ts":1380486076801,"patch":[[{"diffs":[[0,"\n\n      "],[-1,"describe"],[1,"it"],[0," 'can be"]],"start1":2114,"start2":2114,"length1":24,"length2":18}]],"length":2356,"saved":false}
{"ts":1380486267618,"patch":[[{"diffs":[[0,"']\n\n"],[-1,"The module can be used as a nail module.\n\n      it 'can be used as a nail module', ->\n        nail = nailCore.use parent\n        parent = ->\n        \n        lib = nail.to User:\n          parent: parent\n          \n        x = new lib.User\n        (x instanceof parent).should.be.ok\n"]],"start1":2070,"start2":2070,"length1":286,"length2":4}]],"length":2074,"saved":false}
{"ts":1380486283228,"patch":[[{"diffs":[[0,".be.ok\n\n"],[1,"\nThe module can be used as a nail module.\n\n      it 'can be used as a nail module', ->\n        nail = nailCore.use parent\n        parent = ->\n        \n        lib = nail.to User:\n          parent: parent\n          \n        x = new lib.User\n        (x instanceof parent).should.be.ok\n        \n"],[0,"...and c"]],"start1":910,"start2":910,"length1":16,"length2":308}]],"length":2366,"saved":false}
{"ts":1380486940906,"patch":[[{"diffs":[[0,"         Person "],[1," "],[0,"= ->\n          \n"]],"start1":1476,"start2":1476,"length1":32,"length2":33},{"diffs":[[0," = ->\n          "],[1,"User    = ->"],[0,"\n          User."]],"start1":1492,"start2":1492,"length1":32,"length2":44},{"diffs":[[0,"         Person "],[1," = ->\n          User    "],[0,"= ->\n          \n"]],"start1":1782,"start2":1782,"length1":32,"length2":56}]],"length":2403,"saved":false}
{"ts":1380486970911,"patch":[[{"diffs":[[0," = ->\n          "],[1,"User    = ->"],[0,"\n          User."]],"start1":2138,"start2":2138,"length1":32,"length2":44}]],"length":2415,"saved":false}
{"ts":1380487069379,"patch":[[{"diffs":[[0,"  parent"],[1,"Class"],[0," = ->\n  "]],"start1":1046,"start2":1046,"length1":16,"length2":21},{"diffs":[[0,"rent: parent"],[1,"Class"],[0,"\n          \n"]],"start1":1114,"start2":1114,"length1":24,"length2":29}]],"length":2425,"saved":false}
{"ts":1380487143149,"patch":[[{"diffs":[[0," \n          User"],[-1,"::"],[1,"."],[0,"prototype.should"]],"start1":1636,"start2":1636,"length1":34,"length2":33}]],"length":2424,"saved":false}
{"ts":1380487223987,"patch":[[{"diffs":[[0," \n          "],[1,"("],[0,"User.prototy"]],"start1":1636,"start2":1636,"length1":24,"length2":25},{"diffs":[[0,"rototype"],[-1,".should.equal Person"],[1," instanceof Person).should.be.ok"],[0,"\n\nThe pa"]],"start1":1655,"start2":1655,"length1":36,"length2":48}]],"length":2437,"saved":false}
{"ts":1380487293637,"patch":[[{"diffs":[[0,"nceof parent"],[1,"Class"],[0,").should.be."]],"start1":1184,"start2":1184,"length1":24,"length2":29}]],"length":2442,"saved":false}
{"ts":1380487334859,"patch":[[{"diffs":[[0,"     \n          "],[1,"("],[0,"User"],[-1,"::"],[1,"."],[0,"prototype.should"]],"start1":1972,"start2":1972,"length1":38,"length2":38},{"diffs":[[0,"type"],[-1,".should.equal Person"],[1," instanceof Person).should.be.ok"],[0,"\n\n\nO"]],"start1":1999,"start2":1999,"length1":28,"length2":40}]],"length":2454,"saved":false}
{"ts":1380487406373,"patch":[[{"diffs":[[0,"    "],[1,"("],[0,"User"],[-1,"::"],[1,"."],[0,"prot"]],"start1":2333,"start2":2333,"length1":14,"length2":14},{"diffs":[[0,"rototype"],[-1,".should.equal"],[1," instanceof"],[0," nailCor"]],"start1":2344,"start2":2344,"length1":29,"length2":27},{"diffs":[[0,"Person']"],[1,")\n            .should.be.ok"],[0,"\n       "]],"start1":2390,"start2":2390,"length1":16,"length2":43}]],"length":2479,"saved":false}
{"ts":1380487523198,"patch":[[{"diffs":[[0,"    "],[-1,"\n          (User.prototype"],[1,"x = new User\n          (x"],[0," ins"]],"start1":1973,"start2":1973,"length1":34,"length2":33}]],"length":2478,"saved":false}
{"ts":1380487549527,"patch":[[{"diffs":[[0," User\n          "],[1,"x = new User"],[0,"\n          (User"]],"start1":1626,"start2":1626,"length1":32,"length2":44}]],"length":2490,"saved":false}
{"ts":1380487557121,"patch":[[{"diffs":[[0,"\n          ("],[-1,"User.prototype"],[1,"x"],[0," instanceof "]],"start1":1654,"start2":1654,"length1":38,"length2":25}]],"length":2477,"saved":false}
{"ts":1380487568447,"patch":[[{"diffs":[[0," User\n          "],[1,"x = new User"],[0,"\n          (User"]],"start1":2308,"start2":2308,"length1":32,"length2":44}]],"length":2489,"saved":false}
{"ts":1380487583060,"patch":[[{"diffs":[[0,"   ("],[-1,"User.prototype"],[1,"x"],[0," ins"]],"start1":2344,"start2":2344,"length1":22,"length2":9},{"diffs":[[0,"erson'])"],[-1,"\n            "],[0,".should."]],"start1":2388,"start2":2388,"length1":29,"length2":16}]],"length":2463,"saved":false}
{"ts":1380487804603,"patch":[[{"diffs":[[0,"ore.lib["],[-1,"'nail-common.Person']"],[1,"] ) undefined"],[0,"\n\n"]],"start1":2432,"start2":2432,"length1":31,"length2":23}]],"length":2455,"saved":false}
{"ts":1380487836091,"patch":[[{"diffs":[[0,"    "],[-1,"delete "],[0,"nail"]],"start1":2416,"start2":2416,"length1":15,"length2":8},{"diffs":[[0,"lib["],[1,"nail-common.Person"],[0,"] "],[-1,")"],[1,"="],[0," und"]],"start1":2429,"start2":2429,"length1":11,"length2":29}]],"length":2466,"saved":false}
{"ts":1380487908935,"patch":[[{"diffs":[[0,"rson'\n          "],[1,"User.nail = nailCore"],[0,"\n          paren"]],"start1":2267,"start2":2267,"length1":32,"length2":52}]],"length":2486,"saved":false}
{"ts":1380487994123,"patch":[[{"diffs":[[0,"   x = new User\n"],[1,"          \n"],[0,"          (x ins"]],"start1":2341,"start2":2341,"length1":32,"length2":43},{"diffs":[[0,"defined\n"],[-1,"\n"],[1,"          "]],"start1":2488,"start2":2488,"length1":9,"length2":18}]],"length":2506,"saved":false}
{"ts":1380488032855,"patch":[[{"diffs":[[0,"ore.lib["],[1,"'"],[0,"nail-com"]],"start1":2456,"start2":2456,"length1":16,"length2":17},{"diffs":[[0,"n.Person"],[1,"'"],[0,"] = unde"]],"start1":2475,"start2":2475,"length1":16,"length2":17}]],"length":2508,"saved":false}
