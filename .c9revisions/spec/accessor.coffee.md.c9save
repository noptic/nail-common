{"ts":1380810111969,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1380810415423,"patch":[[{"diffs":[[1,"accessor\n========\nDefinitions\n-----------\n\n    should      = require 'should'\n    common      = require ('../coverage/instrument/lib/module.js')\n    _           = require 'underscore'\n    nailCore    = require 'nail-core'\n    nail        = nailCore.use common.accessor\n    \nDescription\n-----------\n\n    describe, 'accesor', ->\n      it 'is an Object', ->\n        (_.isObject common.accessor).should.be.ok"]],"start1":0,"start2":0,"length1":0,"length2":404}]],"length":404,"saved":false}
{"ts":1380811003558,"patch":[[{"diffs":[[0,"ld.be.ok"],[1,"\n        \n      it 'implements \"augment\"', ->\n        _.isFunction(common.accessor.augment).should.be.ok"]],"start1":396,"start2":396,"length1":8,"length2":112}]],"length":508,"saved":false}
{"ts":1380811080247,"patch":[[{"diffs":[[0,"describe"],[-1,","],[0," 'acceso"]],"start1":303,"start2":303,"length1":17,"length2":16}]],"length":507,"saved":false}
{"contributors":[],"silentsave":false,"ts":1380827910522,"patch":[[{"diffs":[[0,"ugment).should.be.ok"],[1,"\n        \n      it '', ->"]],"start1":487,"start2":487,"length1":20,"length2":45}]],"length":532,"saved":false}
{"ts":1380828824396,"patch":[[{"diffs":[[0,".ok\n"],[-1,"        "],[0,"\n"],[1,""],[0,"    "]],"start1":400,"start2":400,"length1":17,"length2":9},{"diffs":[[0,"gment\"', ->\n"],[-1,""],[0,"        _.is"]],"start1":429,"start2":429,"length1":24,"length2":24},{"diffs":[[0,"ugment).should.be.ok"],[1,"\n\nThe \"aspect\" properties defines which section of the class definition the module handles.\n\n      it 'has a \"aspect\" string\"', ->\n        properties.aspect.should.be.a 'string'\n      \n      it 'its aspect is \"properties\"', ->\n        properties.aspect.should.equal 'properties'\n        \nThis aspect is optional.      \n      \n      it 'does not crash if the class has no properties', ->\n        Person = ->\n        Person.definition = {}\n        properties.augment Person\n      \n        \n      descibe 'adds accessors to the class', ->\n        lib = nail.to\n        "]],"start1":479,"start2":479,"length1":20,"length2":586}]],"length":1065,"saved":false}
{"ts":1380828894479,"patch":[[{"diffs":[[0,"ccesor', ->\n"],[1,"      \n"],[0,"      it 'is"]],"start1":314,"start2":314,"length1":24,"length2":31}]],"length":1072,"saved":false}
{"ts":1380829079493,"patch":[[{"diffs":[[0," ->\n        "],[-1,"properties"],[1,"accessor"],[0,".aspect.shou"]],"start1":633,"start2":633,"length1":34,"length2":32},{"diffs":[[0,"        "],[-1,"properties"],[1,"accessor"],[0,".aspect."]],"start1":731,"start2":731,"length1":26,"length2":24},{"diffs":[[0,"        "],[-1,"properties"],[1,"accessor"],[0,".augment"]],"start1":940,"start2":940,"length1":26,"length2":24},{"diffs":[[0,"e 'adds "],[1,"property "],[0,"accessor"]],"start1":1000,"start2":1000,"length1":16,"length2":25},{"diffs":[[0," nail.to"],[1," Person\n          name: 'anon'\n          age:  null"],[0,"\n       "]],"start1":1058,"start2":1058,"length1":16,"length2":67}]],"length":1126,"saved":false}
{"ts":1380829163749,"patch":[[{"diffs":[[0,"    "],[-1,"descibe 'adds property accessors to the class', ->\n        lib = nail.to Person\n          name: 'anon'\n          age:  null"],[1,"  "],[0,"\n   "]],"start1":990,"start2":990,"length1":131,"length2":10}]],"length":1005,"saved":false}
{"ts":1380829239991,"patch":[[{"diffs":[[0,"le.js')\n"],[1,"    accessor    = common.accessor\n"],[0,"    _   "]],"start1":137,"start2":137,"length1":16,"length2":50},{"diffs":[[0,"ore.use "],[-1,"common."],[0,"accessor"]],"start1":279,"start2":279,"length1":23,"length2":16}]],"length":1032,"saved":false}
{"ts":1380832386012,"patch":[[{"diffs":[[0," Person\n    "],[1,"\nFor each function a accesor method is created\n      \n      it 'creates accesor functions', ->\n        lib = nail.to Person:\n          properties:\n            name: 'anon'\n            id:   null\n        \n        dalia = new lib.Person    \n        dalia\n          .name('Dalia')\n          .id(1)\n          \n        dalia.name().should.equal 'Dalia'\n        dalia.id().should.equal 1\n          \n          \n        \n      "],[0,"  \n"],[-1,"  "],[0,"      \n     "]],"start1":991,"start2":991,"length1":29,"length2":446}]],"length":1449,"saved":false}
{"ts":1380832542682,"patch":[[{"diffs":[[0,"        "],[-1,"n"],[1,"firstN"],[0,"ame: 'an"]],"start1":1154,"start2":1154,"length1":17,"length2":22},{"diffs":[[0,"       ."],[-1,"n"],[1,"firstN"],[0,"ame('Dal"]],"start1":1264,"start2":1264,"length1":17,"length2":22}]],"length":1459,"saved":false}
{"ts":1380832550089,"patch":[[{"diffs":[[0,"  dalia."],[-1,"n"],[1,"firstN"],[0,"ame().sh"]],"start1":1325,"start2":1325,"length1":17,"length2":22}]],"length":1464,"saved":false}
{"ts":1380832811906,"patch":[[{"diffs":[[0,"        "],[-1,"id"],[1,"lastName"],[0,":   null"]],"start1":1184,"start2":1184,"length1":18,"length2":24},{"diffs":[[0,"   ."],[-1,"id(1"],[1,"lastName('?'"],[0,")\n  "]],"start1":1304,"start2":1304,"length1":12,"length2":20},{"diffs":[[0,"ual "],[-1,"1"],[1,"'?'"],[0,"\n   "]],"start1":1408,"start2":1408,"length1":9,"length2":11}]],"length":1480,"saved":false}
{"ts":1380834339356,"patch":[[{"diffs":[[0,"se accessor\n"],[1,"    they        = it\n"],[0,"    \nDescrip"]],"start1":284,"start2":284,"length1":24,"length2":45},{"diffs":[[0,"    "],[-1,"it 'creates accesor "],[1,"describe '"],[0,"func"]],"start1":1080,"start2":1080,"length1":28,"length2":18}]],"length":1491,"saved":false}
{"ts":1380834391364,"patch":[[{"diffs":[[0,"b.Person"],[1,"\n        \n        they 'are created', ->\n            \n        "],[0,"    \n   "]],"start1":1251,"start2":1251,"length1":16,"length2":78}]],"length":1553,"saved":false}
{"ts":1380834440697,"patch":[[{"diffs":[[0,"        "],[-1,"  \n          "],[1,"(_.isFunction dalia.firstName).should.be.ok  \n          (_.isFunction dalia.lastName).should.be.ok"],[0,"  \n     "]],"start1":1302,"start2":1302,"length1":29,"length2":114}]],"length":1638,"saved":false}
{"ts":1380834449572,"patch":[[{"diffs":[[0,"k  \n"],[-1,"        dalia\n          .firstName('Dalia')\n          .lastName('?')\n          \n        dalia.firstName().should.equal 'Dalia'\n        dalia.id().should.equal '?'\n          \n          \n        \n"],[0,"    "]],"start1":1407,"start2":1407,"length1":202,"length2":8}]],"length":1444,"saved":false}
{"ts":1380834666899,"patch":[[{"diffs":[[0,"     \n      "],[1,"  they 'set property values'\n          dalia.firstName 'Dalia'\n          dalia.lastName '???'\n          dalis._firstName.should.equal 'Dalia'\n          dalis._lastName.should.equal '???'"],[0,"\n        \n  "]],"start1":1414,"start2":1414,"length1":24,"length2":210}]],"length":1630,"saved":false}
{"ts":1380834806126,"patch":[[{"diffs":[[0," values'"],[1,", ->"],[0,"\n       "]],"start1":1446,"start2":1446,"length1":16,"length2":20}]],"length":1634,"saved":false}
{"ts":1380834840341,"patch":[[{"diffs":[[0,"    dali"],[-1,"s"],[1,"a"],[0,"._firstN"]],"start1":1530,"start2":1530,"length1":17,"length2":17},{"diffs":[[0,"    dali"],[-1,"s"],[1,"a"],[0,"._lastNa"]],"start1":1578,"start2":1578,"length1":17,"length2":17}]],"length":1634,"saved":false}
{"ts":1380834920082,"patch":[[{"diffs":[[0,"    "],[-1,"dalia = new lib.Person\n        \n        they 'are created', ->"],[1,"they 'are created', ->\n          dalia = new lib.Person"],[0,"\n   "]],"start1":1233,"start2":1233,"length1":70,"length2":63},{"diffs":[[0,"rty values', ->\n"],[1,"          dalia = new lib.Person\n"],[0,"          dalia."]],"start1":1436,"start2":1436,"length1":32,"length2":65}]],"length":1660,"saved":false}
{"ts":1380836681268,"patch":[[{"diffs":[[0,"equal '???'\n"],[1,"          \n        they 'get property values', ->\n          x = new lib.Person\n          x._firstName = 'x'\n          x._lastName = 'y'\n"],[0,"        \n   "]],"start1":1631,"start2":1631,"length1":24,"length2":160}]],"length":1796,"saved":false}
{"ts":1380836731200,"patch":[[{"diffs":[[0,"e = 'y'\n"],[1,"          x.firstName().should.equal 'x'\n          x.lastName().should.equal 'x'\n"],[0,"        "]],"start1":1771,"start2":1771,"length1":16,"length2":97}]],"length":1877,"saved":false}
{"ts":1380837572240,"patch":[[{"diffs":[[0,").should.equal '"],[-1,"x"],[1,"y"],[0,"'\n        \n     "]],"start1":1841,"start2":1841,"length1":33,"length2":33}]],"length":1877,"saved":false}
{"ts":1380837729518,"patch":[[{"diffs":[[0,"d.equal 'y'\n"],[1,"          \n        they 'support GEN:get', ->\n          x = new lib.Person\n          x._firstName = 'x'\n          x._lastName = 'y'\n          x['GEN:get']('firstName').should.equal 'x'\n          x['GEN:get']('lastNamr').should.equal 'y'\n"],[0,"        \n   "]],"start1":1848,"start2":1848,"length1":24,"length2":261}]],"length":2114,"saved":false}
{"ts":1380837734745,"patch":[[{"diffs":[[0,"'lastNam"],[-1,"r"],[1,"e"],[0,"').shoul"]],"start1":2068,"start2":2068,"length1":17,"length2":17}]],"length":2114,"saved":false}
{"ts":1380837775057,"patch":[[{"diffs":[[0,"hould.equal 'y'\n"],[1,"        \n         they 'support GEN:set', ->\n          dalia = new lib.Person\n          dalia.firstName 'Dalia'\n          dalia.lastName '???'\n          dalia._firstName.should.equal 'Dalia'\n          dalia._lastName.should.equal '???'\n"],[0,"          \n     "]],"start1":1844,"start2":1844,"length1":32,"length2":268}]],"length":2350,"saved":false}
{"ts":1380837868970,"patch":[[{"diffs":[[0,"\n          dalia"],[-1,"."],[1,"['GEN:set'] '"],[0,"firstName 'Dalia"]],"start1":1937,"start2":1937,"length1":33,"length2":45},{"diffs":[[0,"set'] 'firstName"],[-1," "],[1,"',"],[0,"'Dalia'\n        "]],"start1":1959,"start2":1959,"length1":33,"length2":34},{"diffs":[[0,"       dalia"],[-1,"."],[1,"['GEN:set'] '"],[0,"lastName"],[-1," "],[1,"',"],[0,"'???'\n      "]],"start1":1988,"start2":1988,"length1":34,"length2":47}]],"length":2376,"saved":false}
