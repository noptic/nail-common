{"ts":1380445925203,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1380446165805,"patch":[[{"diffs":[[1,"methods\n=======\nDefinitions\n-----------\n\n    should      = require 'should'\n    nailCore    = require 'nail-core'\n    methods     = require('../coverage/instrument/lib/module.js').properties\n    _           = require 'underscore'\n    they        = it #more natural language for describing array properties\n\nDescription\n-----------\n\n    describe 'methods', ->\n      it 'is an Object', ->\n        (_.isObject properties).should.be.ok\n\nThe \"aspect\" properties defines which section of the class definition the module handles.\n\n      it 'has a \"aspect\" string\"', ->\n        properties.aspect.should.be.a 'string'\n      \n      it 'its aspect is \"properties\"', ->\n        properties.aspect.should.equal 'properties'\n        \nThis aspect is optional.      \n      \n      it 'does not crash if the class has no properties', ->\n        Person = ->\n        Person.definition = {}\n        properties.augment Person\n\nThe augment function exists...\n\n      it 'has a \"augment\" function', ->\n        (_.isFunction properties.augment).should.be.ok\n\n...and adds properties to the prototype.\n\n      it 'adds a property to a class prototype', ->\n        Person = ->\n        Person.definition =\n          properties:\n            name: 'anon'\n            \n        properties.augment Person\n        x = new Person\n        x.name.should.equal 'anon'\n\nThe module can be used as a nail module.\n\n      it 'can be used as a nail module', ->\n        nail = nailCore.use properties\n        lib = nail.to Person:\n          properties:\n            name: 'anon'\n          \n        x = new lib.Person\n        x.name.should.equal 'anon'\n            \nAnd supports generic commands.\n\n      describe 'supports the generic commands', ->\n        nail = nailCore.use properties\n        lib = nail.to Person:\n          properties:\n            name: 'anon'\n          \n        x = new lib.Person\n        \n        it 'GEN:set', ->\n          x['GEN:set'] 'name', 'whatever'\n          x.name.should.equal 'whatever'\n          \n        it 'GEN:get', ->\n          x.name = 'blub'\n          x['GEN:get']('name').should.equal 'blub'\n      \n          "]],"start1":0,"start2":0,"length1":0,"length2":2099}]],"length":2099,"saved":false}
{"ts":1380446183722,"patch":[[{"diffs":[[0,"sObject "],[-1,"propertie"],[1,"method"],[0,"s).shoul"]],"start1":399,"start2":399,"length1":25,"length2":22}]],"length":2096,"saved":false}
{"ts":1380446203827,"patch":[[{"diffs":[[0,"ect is \""],[-1,"propertie"],[1,"method"],[0,"s\"', ->\n"]],"start1":630,"start2":630,"length1":25,"length2":22},{"diffs":[[0," ->\n        "],[-1,"propertie"],[1,"method"],[0,"s.aspect.sho"]],"start1":648,"start2":648,"length1":33,"length2":30}]],"length":2090,"saved":false}
{"ts":1380446214486,"patch":[[{"diffs":[[0,".equal '"],[-1,"propertie"],[1,"method"],[0,"s'\n     "]],"start1":681,"start2":681,"length1":25,"length2":22}]],"length":2087,"saved":false}
{"ts":1380446232976,"patch":[[{"diffs":[[0," has no "],[-1,"propertie"],[1,"method"],[0,"s', ->\n "]],"start1":782,"start2":782,"length1":25,"length2":22},{"diffs":[[0," {}\n        "],[-1,"propertie"],[1,"method"],[0,"s.augment Pe"]],"start1":850,"start2":850,"length1":33,"length2":30}]],"length":2081,"saved":false}
{"ts":1380447697938,"patch":[[{"diffs":[[0,"unction "],[-1,"propertie"],[1,"method"],[0,"s.augmen"]],"start1":972,"start2":972,"length1":25,"length2":22},{"diffs":[[0,"nd adds "],[-1,"propertie"],[1,"method"],[0,"s to the"]],"start1":1015,"start2":1015,"length1":25,"length2":22},{"diffs":[[0,"s a "],[-1,"property"],[1,"method"],[0," to "]],"start1":1063,"start2":1063,"length1":16,"length2":14},{"diffs":[[0,"=\n          "],[-1,"propertie"],[1,"method"],[0,"s:\n         "]],"start1":1146,"start2":1146,"length1":33,"length2":30},{"diffs":[[0,"            "],[-1,"name: 'anon"],[1,"hello: -> 'hello world"],[0,"'\n          "]],"start1":1167,"start2":1167,"length1":35,"length2":46}]],"length":2081,"saved":false}
{"ts":1380447750235,"patch":[[{"diffs":[[0,"        "],[-1,"propertie"],[1,"method"],[0,"s.augmen"]],"start1":1216,"start2":1216,"length1":25,"length2":22},{"diffs":[[0,"erson\n        x."],[-1,"name"],[1,"hello()"],[0,".should.equal 'a"]],"start1":1264,"start2":1264,"length1":36,"length2":39},{"diffs":[[0,".equal '"],[-1,"anon"],[1,"hello world"],[0,"'\n\nThe m"]],"start1":1294,"start2":1294,"length1":20,"length2":27}]],"length":2088,"saved":false}
{"ts":1380447783672,"patch":[[{"diffs":[[0,"ailCore.use "],[-1,"propertie"],[1,"method"],[0,"s\n        li"]],"start1":1418,"start2":1418,"length1":33,"length2":30}]],"length":2085,"saved":false}
{"ts":1380447830894,"patch":[[{"diffs":[[0,":\n          "],[-1,"propertie"],[1,"method"],[0,"s:\n         "]],"start1":1466,"start2":1466,"length1":33,"length2":30},{"diffs":[[0,"            "],[-1,"name: 'anon"],[1,"hello: -> 'hello world"],[0,"'\n          "]],"start1":1487,"start2":1487,"length1":35,"length2":46},{"diffs":[[0,"erson\n        x."],[-1,"name"],[1,"hello()"],[0,".should.equal 'a"]],"start1":1555,"start2":1555,"length1":36,"length2":39},{"diffs":[[0,".equal '"],[-1,"anon'\n        "],[1,"hello world'\n"],[0,"    \nAnd"]],"start1":1585,"start2":1585,"length1":30,"length2":29}]],"length":2095,"saved":false}
{"ts":1380447923563,"patch":[[{"diffs":[[0,"ld'\n"],[-1,"    \nAnd supports generic commands.\n\n      describe 'supports the generic commands', ->\n        nail = nailCore.use properties\n        lib = nail.to Person:\n          properties:\n            name: 'anon'\n          \n        x = new lib.Person\n        \n        it 'GEN:set', ->\n          x['GEN:set'] 'name', 'whatever'\n          x.name.should.equal 'whatever'\n          \n        it 'GEN:get', ->\n          x.name = 'blub'\n          x['GEN:get']('name').should.equal 'blub'\n      \n          "]],"start1":1602,"start2":1602,"length1":493,"length2":4}]],"length":1606,"saved":false}
{"ts":1380448406671,"patch":[[{"diffs":[[0,"le.js')."],[-1,"propertie"],[1,"method"],[0,"s\n    _ "]],"start1":172,"start2":172,"length1":25,"length2":22}]],"length":1603,"saved":false}
{"ts":1380448461580,"patch":[[{"diffs":[[0,"        "],[-1,"propertie"],[1,"method"],[0,"s.aspect"]],"start1":556,"start2":556,"length1":25,"length2":22}]],"length":1600,"saved":false}
